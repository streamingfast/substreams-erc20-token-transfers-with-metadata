// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TokenTransfer {
    #[prost(bytes="vec", tag="1")]
    pub token_address: ::prost::alloc::vec::Vec<u8>,
    #[prost(message, optional, tag="2")]
    pub metadata: ::core::option::Option<TokenMeta>,
    #[prost(bytes="vec", tag="3")]
    pub from: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="4")]
    pub to: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="5")]
    pub amount: ::prost::alloc::string::String,
    #[prost(uint64, tag="6")]
    pub block_number: u64,
    #[prost(string, tag="7")]
    pub tx_hash: ::prost::alloc::string::String,
    #[prost(uint32, tag="8")]
    pub log_index: u32,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TokenTransfers {
    #[prost(message, repeated, tag="1")]
    pub transfers: ::prost::alloc::vec::Vec<TokenTransfer>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TokenMeta {
    #[prost(string, tag="1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag="2")]
    pub symbol: ::prost::alloc::string::String,
    #[prost(int32, tag="3")]
    pub decimals: i32,
}
// @@protoc_insertion_point(module)
