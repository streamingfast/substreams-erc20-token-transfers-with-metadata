// @generated
// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Events {
    /// <https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/IERC20.sol>
    #[prost(message, repeated, tag="1")]
    pub transfers: ::prost::alloc::vec::Vec<Transfer>,
    #[prost(message, repeated, tag="2")]
    pub approvals: ::prost::alloc::vec::Vec<Approval>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transfer {
    /// -- transaction --
    #[prost(bytes="vec", tag="1")]
    pub tx_hash: ::prost::alloc::vec::Vec<u8>,
    /// -- call --
    #[prost(bytes="vec", optional, tag="2")]
    pub caller: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
    /// -- log --
    ///
    /// log.address
    #[prost(bytes="vec", tag="3")]
    pub contract: ::prost::alloc::vec::Vec<u8>,
    /// log.ordinal
    #[prost(uint64, tag="4")]
    pub ordinal: u64,
    /// log.index
    #[prost(uint32, tag="5")]
    pub log_index: u32,
    /// -- event --
    #[prost(bytes="vec", tag="10")]
    pub from: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="11")]
    pub to: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="12")]
    pub value: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Approval {
    /// -- transaction --
    #[prost(bytes="vec", tag="1")]
    pub tx_hash: ::prost::alloc::vec::Vec<u8>,
    /// -- call --
    #[prost(bytes="vec", optional, tag="2")]
    pub caller: ::core::option::Option<::prost::alloc::vec::Vec<u8>>,
    /// -- log --
    ///
    /// log.address
    #[prost(bytes="vec", tag="3")]
    pub contract: ::prost::alloc::vec::Vec<u8>,
    /// log.ordinal
    #[prost(uint64, tag="4")]
    pub ordinal: u64,
    /// log.index
    #[prost(uint32, tag="5")]
    pub log_index: u32,
    /// -- event --
    #[prost(bytes="vec", tag="10")]
    pub owner: ::prost::alloc::vec::Vec<u8>,
    #[prost(bytes="vec", tag="11")]
    pub spender: ::prost::alloc::vec::Vec<u8>,
    #[prost(string, tag="12")]
    pub value: ::prost::alloc::string::String,
}
// @@protoc_insertion_point(module)
